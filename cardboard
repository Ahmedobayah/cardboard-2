#!/usr/bin/env node

var fs = require('fs'),
    Cardboard = require('./'),
    concat = require('concat-stream'),
    geojsonNormalize = require('geojson-normalize'),
    JSONStream = require('JSONStream'),
    argv = require('minimist')(process.argv.slice(2)),
    dynamoAdapter = require('./lib/dynamodbadapter');

if (!argv._.length) {
    docs();
    return console.error('database filename required');
}

var db;
dynamoAdapter(function(_db) {
    db = _db;
    ready();
});

function ready() {
    var cardboard = new Cardboard(db);

    if (!process.stdin.isTTY) {
        process.stdin.pipe(concat(function(buf) {
            var gj = geojsonNormalize(JSON.parse(buf));
            gj.features.forEach(function(feature) {
                var id = ((feature.id !== undefined) ?
                    feature.id : feature.properties.id);
                cardboard.insert(id, feature, function(err){
                    if(err) throw err;
                });
            });
        }));
        return;
    }

    if (argv._.length) {
        switch (argv._[0]) {
            case 'export':
                cardboard.export()
                    .pipe(process.stdout);
                break;
            case 'dump':
                cardboard.dump()
                    .pipe(JSONStream.stringify())
                    .pipe(process.stdout);
                break;
            case 'dumpGeoJSON':
                cardboard.dumpGeoJSON()
                    .pipe(process.stdout);
                break;
        }
    }
}

function docs() {
    fs.createReadStream(__dirname + '/CLI.md').pipe(process.stdout);
}
